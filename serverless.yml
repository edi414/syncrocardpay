service: syncrocardpay

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    strip: false

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  memorySize: 1024
  timeout: 900
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:ListBucket
            - s3:PutObject
          Resource:
            - arn:aws:s3:::syncrocardpay-reports-244641534401
            - arn:aws:s3:::syncrocardpay-reports-244641534401/*
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
          Resource:
            - arn:aws:ssm:us-east-1:244641534401:parameter/syncrocardpay/*

package:
  patterns:
    - '!**/*'
    - 'main.py'
    - 'scripts/**'
    - 'utils/**'
    - 'requirements.txt'

functions:
  reconcile:
    handler: main.lambda_handler
    events:
      - schedule:
          rate: cron(0 12 * * ? *)
          description: "Executa reconciliação diária às 09:00 BR time (12:00 UTC)"
    environment:
      S3_BUCKET: syncrocardpay-reports-244641534401
      S3_PREFIX: processed_files
      HOST: ${ssm:/syncrocardpay/ftps/host}
      FTPS_USER: ${ssm:/syncrocardpay/ftps/user}
      FTPS_PASSWORD: ${ssm:/syncrocardpay/ftps/password}
      FTPS_PORT: ${ssm:/syncrocardpay/ftps/port}
      DB_HOST: ${ssm:/syncrocardpay/db/host}
      DB_USER: ${ssm:/syncrocardpay/db/user}
      DB_PASSWORD: ${ssm:/syncrocardpay/db/password}
      DB_NAME: ${ssm:/syncrocardpay/db/name}
      DB_PORT: ${ssm:/syncrocardpay/db/port}

resources:
  Resources:
    DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: syncrocardpay-reports-244641534401

